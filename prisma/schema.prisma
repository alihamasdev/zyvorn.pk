generator client {
  provider = "prisma-client"
  output   = "../src/lib/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum OrderStatus {
  PROCESSING
  SHIPPING
  DELIVERED
}

enum Province {
  PUNJAB
  SINDH
  BALOCHISTAN
  KPK
}

model Product {
  id               Int         @id @default(autoincrement())
  title            String
  slug             String      @unique
  images           String[]
  originalPrice    Int         @map("original_price")
  discountedPrice  Int?        @map("discounted_price")
  shortDescription String?     @map("short_description")
  longDescription  String?     @map("long_description")
  createdAt        DateTime    @default(now()) @map("created_at")
  categoryId       Int         @map("category_id")
  category         Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  reviews          Review[]
  variations       Variation[]
  orderItems       OrderItem[]

  @@index([id, slug, categoryId])
  @@map("products")
}

model Variation {
  id         Int         @id @default(autoincrement())
  name       String
  color      String
  stock      Int         @default(0)
  productId  Int         @map("product_id")
  product    Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@index([id, productId])
  @@map("variation")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  slug     String    @unique
  products Product[]

  @@index([slug])
  @@map("categories")
}

model Review {
  id        Int      @id @default(autoincrement())
  name      String
  rating    Int
  comment   String?
  createdAt DateTime @default(now()) @map("created_at")
  productId Int      @map("product_id")
  product   Product  @relation(fields: [productId], references: [id])

  @@index([id, productId])
  @@map("reviews")
}

model Order {
  id        Int         @id @default(autoincrement())
  name      String
  phone     Int
  email     String
  address   String
  city      String
  zipCode   Int         @map("zip_code")
  amount    Int
  province  Province
  status    OrderStatus @default(PROCESSING)
  createdAt DateTime    @default(now()) @map("created_at")
  items     OrderItem[]

  @@index([id, status])
  @@map("orders")
}

model OrderItem {
  id          Int        @id @default(autoincrement())
  orderId     Int        @map("order_id")
  order       Order      @relation(fields: [orderId], references: [id])
  productId   Int        @map("product_id")
  product     Product    @relation(fields: [productId], references: [id])
  variationId Int?       @map("variation_id")
  variation   Variation? @relation(fields: [variationId], references: [id])

  @@index([id, orderId, productId])
  @@map("order_items")
}
